# FILE: actions/actions.py

import json
import os
import unicodedata
from typing import Any, Text, Dict, List

from rasa_sdk import Action, Tracker
from rasa_sdk.executor import CollectingDispatcher
from rasa_sdk.events import SlotSet

# --- Hàm hỗ trợ chuẩn hóa tên file ---
def normalize_vietnamese_text(text: Text) -> Text:
    """
    Chuẩn hóa văn bản tiếng Việt để tạo tên file.
    Ví dụ: "Hà Nội" -> "ha_noi", "Cà Mau" -> "ca_mau"
    """
    if not text:
        return ""
    # Chuyển thành dạng không dấu
    no_accent_text = "".join(
        c for c in unicodedata.normalize("NFD", text) 
        if unicodedata.category(c) != "Mn"
    )
    # Xử lý chữ "Đ"
    no_accent_text = no_accent_text.replace("Đ", "D").replace("đ", "d")
    # Thay thế khoảng trắng bằng gạch dưới và chuyển thành chữ thường
    return no_accent_text.replace(" ", "_").lower()

# --- Action chính để tra cứu và trả lời ---
class ActionQueryKnowledgeBase(Action):

    def name(self) -> Text:
        return "action_query_knowledge_base"

    def run(self, dispatcher: CollectingDispatcher,
            tracker: Tracker,
            domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:

        # Lấy thông tin từ slot
        location = tracker.get_slot("location")
        requested_info = tracker.get_slot("requested_info")

        # Nếu không có địa điểm, yêu cầu người dùng cung cấp
        if not location:
            dispatcher.utter_message(response="utter_ask_for_location")
            return []

        try:
            # Xây dựng đường dẫn file dựa trên tên địa điểm đã chuẩn hóa
            normalized_location = normalize_vietnamese_text(location)
            file_path = os.path.join("data", "knowledge_base", "provinces", f"{normalized_location}.json")

            with open(file_path, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            # Tìm đúng data của tỉnh trong file JSON
            province_data = None
            for key in data:
                if normalize_vietnamese_text(key) == normalized_location:
                    province_data = data[key]
                    break
            
            if not province_data:
                dispatcher.utter_message(text=f"Xin lỗi, tôi chưa có dữ liệu chi tiết cho '{location}'.")
                return [SlotSet("location", None), SlotSet("requested_info", None)]

            # Xây dựng câu trả lời dựa trên yêu cầu
            response_title = ""
            response_body = ""

            if requested_info == "places_to_visit":
                response_title = f"🏞️ **Các địa điểm không thể bỏ lỡ tại {location}:**\n\n"
                places = province_data.get("places_to_visit", [])
                if places:
                    for item in places[:5]:  # Giới hạn 5 địa điểm
                        name = item.get("name", "N/A")
                        details = item.get("details", "")
                        response_body += f"📍 **{name}**\n{details}\n\n"
                else:
                    response_body = "Hiện chưa có thông tin chi tiết về địa điểm tham quan."
            
            elif requested_info == "what_to_eat":
                response_title = f"🍜 **Đặc sản ẩm thực tại {location}:**\n\n"
                foods = province_data.get("what_to_eat", [])
                if foods:
                    for item in foods[:5]:
                        name = item.get("name", "N/A")
                        details = item.get("details", "")
                        response_body += f"🍽️ **{name}**\n{details}\n\n"
                else:
                    response_body = "Hiện chưa có thông tin về đặc sản ẩm thực."
            
            elif requested_info == "festivals":
                response_title = f"🎊 **Các lễ hội đặc sắc tại {location}:**\n\n"
                festivals = province_data.get("festivals", [])
                if festivals:
                    for item in festivals:
                        name = item.get("name", "N/A")
                        time = item.get("time", "")
                        details = item.get("details", "")
                        response_body += f"🎉 **{name}**\n⏰ Thời gian: {time}\n{details}\n\n"
                else:
                    response_body = "Hiện chưa có thông tin về lễ hội."
            
            else:  # Trường hợp "general" hoặc hỏi chung
                response_title = f"📝 **Thông tin về {location}:**\n\n"
                culture = province_data.get("culture_details", "")
                response_body += f"{culture}\n\n"
                
                # Thêm gợi ý
                response_body += "💡 Bạn có thể hỏi tôi về:\n"
                response_body += "• Địa điểm tham quan\n"
                response_body += "• Đặc sản ẩm thực\n"
                response_body += "• Lễ hội văn hóa\n"

            # Gửi câu trả lời
            full_response = response_title + response_body
            dispatcher.utter_message(text=full_response)

        except FileNotFoundError:
            dispatcher.utter_message(
                text=f"Xin lỗi, tôi chưa có thông tin chi tiết về '{location}'. "
                     f"Hiện tôi có dữ liệu về 34 tỉnh thành Việt Nam. Bạn có thể thử hỏi về tỉnh khác!"
            )
        
        except Exception as e:
            print(f"❌ Lỗi: {e}")
            dispatcher.utter_message(text="Rất tiếc, đã có lỗi xảy ra khi tôi tìm kiếm thông tin.")

        # Xóa slot sau khi trả lời
        return [SlotSet("location", None), SlotSet("requested_info", None)]